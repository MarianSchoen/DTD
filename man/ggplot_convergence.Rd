% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_plotConvergence.R
\name{ggplot_convergence}
\alias{ggplot_convergence}
\title{Plot loss curve}
\usage{
ggplot_convergence(DTD.model, X.matrix = NA, test.data, estimate.c.type,
  main = "")
}
\arguments{
\item{DTD.model}{list, as returned by the train_correlation_model function.}

\item{test.data}{numeric matrix with samples as columns, and features as rows.
In the formula above denoated as Y.}

\item{estimate.c.type}{string, either "non_negative", or "direct". Indicates how the algorithm finds the solution of
\eqn{arg min_C ||diag(g)(Y - XC)||_2}. If estimate.c.type is set to "direct" there is no regularization
(see \code{\link{estimate_c}}),
if estimate.c.type is set to "non_negative" the estimates "C"
must not be negative (non-negative least squares) (see (see \code{\link{estimate_nn_c}}))}

\item{main}{string, additionally title (default "")}
}
\value{
ggplot object
}
\description{
The "ggplot_convergence" function uses ggplot2 and reshape to visualize the decrease of the loss-function after
a model has been trained.
}
\details{
As input parameter it needs the output of \code{\link{train_correlatio_model}}, \code{\link{DTD_cv_lambda}},
or\code{\link{descent_generalized_fista}}.
If fista has been evoked with save_all_tweaks = T, and a evaluation function is available,
the loss-function can be evaluated for all intermediate tweak vectors,
and both training and test loss curves will be plotted (=> detect overfitting).\cr
For an example see section "Visualization of learn curve" in the package vignette `browseVignettes("DTD")`
}
