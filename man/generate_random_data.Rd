% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_generate_random_data.R
\name{generate_random_data}
\alias{generate_random_data}
\title{Generating random data}
\usage{
generate_random_data(n.types = 5, n.samples.per.type = 10,
  n.features = 1000, sample.type = "Cell", feature.type = "gene",
  seed = 1310)
}
\arguments{
\item{n.types}{integer >= 2, how many different types should be included in the data set (default 5)}

\item{n.samples.per.type}{integer >= 1, how many samples should be generated per type (default 10)
Notice, for each type, the number of samples will be randomized a bit}

\item{n.features}{integer >= 1, how many features should be included (default 1000)}

\item{sample.type}{string, name of samples, defaults to "Cell"}

\item{feature.type}{string, name of features, defaults to "gene"}

\item{seed}{integer, to which the seed will be set, defaults to 1310}
}
\value{
matrix with (n.types * n.samples.per.type) columns, and n.features rows
}
\description{
generate_random_data simulates data which can be used exemplary for digital tissue deconvolution.
It will generate a numeric matrix with "n.features" rows, and "n.types" * "n.samples.per.type"
columns. Each column represents a sample of special type. The function will generate "n.types",
and for each type "n.samples.per.type".
Mathematically, the function randomly generates a lambda for each feature in each type.
Then it generates multiple samples per type. Each feature in every sample will be drawn from a poisson
distribution with the previously sampled lambda.
}
\examples{
library(DTD)
random.data <- generate_random_data(
  n.types = 5,
  n.samples.per.type = 10,
  n.features = 100,
  sample.type = "Cell",
  feature.type = "gene"
)

# normalize all samples to the same amount of counts:
random.data <- normalize_to_count(random.data)
}
