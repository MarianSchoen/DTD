% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_crossValidation.R
\name{DTD_cv_lambda_R}
\alias{DTD_cv_lambda_R}
\title{Cross-validation for digital tissue deconvolution}
\usage{
DTD_cv_lambda_R(lambda.seq = "none", tweak.start, n.folds = 5,
  lambda.length = 10, train.data.list, cv.verbose = TRUE,
  warm.start = FALSE, F.GRAD.FUN, EVAL.FUN, ...)
}
\arguments{
\item{lambda.seq}{numeric vector or NULL or "none": Over this series of lambdas the
FISTA will be optimized. If 'lambda.seq' is set to NULL, a generic series of
lambdas - depending on the dimensions of the training set -
will be generated. If 'lambda.seq' is "none", no cross validation is done.
Only one model with lambda = 0 is trained on the complete data set.}

\item{tweak.start}{numeric vector, starting vector for the DTD algorithm.}

\item{n.folds}{integer, number of buckets in the cross validation.}

\item{lambda.length}{integer, how many lambdas will be generated
(only used if lambda.seq is NULL)}

\item{train.data.list}{list, with two entries, a numeric matrix each,
named 'mixtures' and 'quantities'
Within this list the train/test cross validation will be done.
(see Vignette `browseVignettes("DTD")` for details)}

\item{cv.verbose}{logical, should information about the cv process be
printed to the screen?}

\item{warm.start}{logical, should the solution of a previous model of
the cross validation be used as start in the next model.
Notice, that the warm.start starts with the most unpenalized model.}

\item{F.GRAD.FUN}{gradient function, see
\code{\link{descent_generalized_fista}}
The 'F.GRAD.FUN' and 'EVAL.FUN' parameters are only present in the
R cross validation. With these parameters an alternativ gradient,
and evaluation function can be provided. Both functions are called
using only the tweak vector as first argument.}

\item{EVAL.FUN}{evaluation function,
see \code{\link{descent_generalized_fista}}}

\item{...}{all parameters that are passed to the
\code{\link{descent_generalized_fista}} function.
E.g. 'maxiter', 'NORM.FUN',  'cycles' etc ...}
}
\value{
list of length 2:
\itemize{
   \item 'cv.obj', list of lists. DTD model for each lambda, and every folds.
   \item 'best.model', list. DTD model optimized on the complete data set
    with the best lambda from the cross validation.
}
}
\description{
Our descent generalized FISTA implementation includes a l1 regularization
term (see \code{\link{train_deconvolution_model}}).
This function performs a 'n.folds'-fold cross validation to find the
best fitting regularization parameter.
}
\details{
For an example see `browseVignettes("DTD")`.

Notice, there is an R and a C++ implementation of our optimizer.
Hence, there are two cross validation implementations,
calling either the R or C++ implementation:
\code{\link{DTD_cv_lambda_R}} and \code{\link{DTD_cv_lambda_cxx}}.
}
