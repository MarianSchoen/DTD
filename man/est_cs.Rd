% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_estimateC.R
\name{est_cs}
\alias{est_cs}
\title{Estimating C}
\usage{
est_cs(X, Y, gamma.vec)
}
\arguments{
\item{X}{numeric matrix with cells as columns, and features as rows.
Reference matrix X of the DTD problem.}

\item{Y}{numeric matrix with samples as columns, and features as rows.}

\item{gamma.vec}{numeric vector with length of nrow(X). In the equation above
the gamma.vec is denotated as g.}
}
\value{
numeric matrix with ncol(X) rows, and ncol(Y) columns
}
\description{
Given a reference matrix X, a matrix of bulks and a g-vector, "est_cs" finds
the solution of \deqn{arg min || diag(g) (Y - XC) ||_2} over all C using
direct analytical solution: (see Goertler et al. 2018)
\deqn{ C(g) = (X^T \Gamma X )^(-1) X^T \Gamma Y}
}
\examples{
library(DTD)

# simulate random data:
random.data <- generate_random_data(n.types = 5,
                                    n.samples.per.type = 1,
                                    n.features = 100)

# simulate a true c
# (this is not used by the est_cs function, it is only used to show the result!)
true.c <- rnorm(n = ncol(random.data), mean = 1, sd = 0.5)

# calculate bulk y = Xc * some_error
bulk <- random.data \%*\% true.c * rnorm(n = nrow(random.data), mean = 1, sd = 0.01)

#estimate c
estimated.c <- est_cs(X = random.data,
                      Y = bulk,
                      gamma.vec = rep(1, nrow(random.data)))

# visualize that the estimated c are close to the true c
plot(true.c, estimated.c)

}
